---
layout:     post
title:      "Markdown快速入门"
subtitle:   "Markdown手册"
date:       2017-02-01 09:00:00
author:     "Kakarotto"
header-img: "img/post-bg-unix-linux.jpg"
catalog: true
tags:
    - 语言
---
# 关于Markdown

>cogito ergo sum

>本文是Markdown的快速入门手册

## 概述

### 什么是Markdown

*Markdown*是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。

*Markdown*的目标是实现「易读易写」。类似于Html，但比Html已经足够简单了，但这玩意比Html更简单。

### 为什么使用Markdown

* 如果你不想去纠结字体，行间距等排版问题，想把心思放在写作内容上而不是形式上，你需要使用*Markdown*。

* 如果你有记电子笔记或者写*Blog*的习惯，你需要使用*Markdown*。*Markdown*支持WordPress，本平台是在GitHub上搭建的，GitHub里也支持*Markdown*。

* 如果你是码农，你需要使用*Markdown* ，他支持语法高亮和关键字识别。

```js
function fancyAlert(arg) {
    if(arg) {
    $.facebox({div:'#foo'})
    }

}
```
* 如果你是数学工作者或者数学爱好者，你需要使用*Markdown*，因为他支持大杀器*Latex*的部分语法。

$$ e^{i\pi}+1=0 $$

### Markdown编辑器推荐

*Markdown*的语法虽然足够简单，但如果使用纯代码做比如插入图片相关的工作效率并不是太高，所以一款靠谱的*Markdown*编辑器能大大的加大你的写作效率。我用的编辑器不多，在这里主要推荐一款叫[Mweb](http://zh.mweb.im)的Markdown编辑软件。后面的快捷键和快捷操作均是在Mweb软件下的操作。

## Markdown的语法

### 标题与强调

```
# 第一级标题 
## 第二级标题 
###### 第六级标题 
```

```
斜体   *里面内容是斜体* 
下划线  _里面内容有下划线_
粗体   **里面内容是粗体**
```
Mweb中快捷键为：`command+i`,`command+u`,`command+b`和Word中快捷键对应一样。

效果如下：

*里面内容是斜体* 

 _里面内容有下划线_
 
**里面内容是粗体**

### 区块引用

```
>第一行文字
>第二行文字
>第三行文字
```
>第一行文字

>第二行文字

>第三行文字

### 无序项目 

```
* 项目一 无序列表 `* + 空格键`
* 项目二
* 项目二的子项目一 无序列表 `TAB + * + 空格键`
* 项目二的子项目二
```

在 MWeb 中的快捷键为： `conrol + U`

效果如下：

* 项目一 无序列表 `* + 空格键`
* 项目二
* 项目二的子项目一 无序列表 `TAB + * + 空格键`
* 项目二的子项目二

### 有序项目

```
`数字 + . + 空格键`
`TAB + 数字 + . + 空格键`
1. 项目一
    1. 子项目一
    2. 子项目二
```
效果如下：

1. 项目一
    1. 子项目一
    2. 子项目二
    
### 插入图片

 直接将图片拖入Mweb中，调整图片宽度则是在图片的描述后面加入`-w+图片宽度`   
 
### 超连接

```
* 连接：<example@qq.com>
* [连接](example@qq.com)
```
效果如下:
* 连接：<example@qq.com>
* [连接](example@qq.com)

### 行内代码

`text` 此快捷键是`command+k`

```
content：此快捷键是`command+shift+k`
```
### 表格

| 题目1 | 题目2 | 题目3 | 题目4 |
| --- | --- | --- | --- |
| 1 | 2 | 3 | 4 |
| 11 | 22 | 33 | 

最好使用Mweb自带的**UI**设置，很方便快捷。

### 删除线和分割线

```
~~删除这些~~ `删除线`
***         `分割线` 
```
效果如下：

~~删除这些~~

***

### 脚注

`这是一个脚注：[^脚注的名字]`
`[^脚注的名字]: 这里是脚注信息`

效果如下：

这是一个脚注：[^脚注的名字]

[^脚注的名字]: 这里是脚注信息

### Mathjax数学公式

和Latex的语法是一样的。

```
块级公式：
$$	x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$

\\[ \frac{1}{\Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{\frac25 \pi}} =
1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {1+\frac{e^{-6\pi}}
{1+\frac{e^{-8\pi}} {1+\ldots} } } } \\]

行内公式： $\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$
```
块级公式：
$$x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a}$$

\\[ \frac{1}{\Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{\frac25 \pi}} =
1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {1+\frac{e^{-6\pi}}
{1+\frac{e^{-8\pi}} {1+\ldots} } } } \\]

行内公式： $\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$

**后续将会写一篇latex快速入门手册。**

**PS：**我用的是**kramdown**的包，为使得网页呈现latex公式，需要在`<head>`,`</head>`标签中添加如下代码调用**mathjax**提供的**CDN**

```
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    tex2jax: {
      inlineMath: [ ['$','$'], ["\\(","\\)"] ],
      processEscapes: true
    }
  });
</script>

<script type="text/x-mathjax-config">
    MathJax.Hub.Config({
      tex2jax: {
        skipTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code']
      }
    });
</script>

<script type="text/x-mathjax-config">
    MathJax.Hub.Queue(function() {
        var all = MathJax.Hub.getAllJax(), i;
        for(i=0; i < all.length; i += 1) {
            all[i].SourceElement().parentNode.className += ' has-jax';
        }
    });
</script>
<script type="text/javascript"
   src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>
```

如果是在**mweb**中使用就无所谓啦。

### Toc目录

`[toc]`

根据你的标题信息自动添加具有连接功能的目录。

## Markdown其它资源

[少数派写的*Markdown*入门](https://sspai.com/post/25137)

[GitCafe上写的比较完整的*Markdown*文档](http://www.appinn.com/markdown/)

[知乎上关于Markdown入门的高票回答](https://www.zhihu.com/question/20409634)





